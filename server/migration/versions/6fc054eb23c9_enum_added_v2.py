"""enum added v2

Revision ID: 6fc054eb23c9
Revises: 7d7f69b86834
Create Date: 2025-07-17 21:44:06.666580

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
# revision identifiers, used by Alembic.
revision: str = '6fc054eb23c9'
down_revision: Union[str, Sequence[str], None] = '7d7f69b86834'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Create the enum type if it doesn't exist
    op.execute("DO $$ BEGIN IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'podcast_status') THEN CREATE TYPE podcast_status AS ENUM ('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED'); END IF; END $$;")
    # Alter the column with explicit casting
    op.execute("ALTER TABLE podcast ALTER COLUMN status TYPE podcast_status USING status::podcast_status")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('podcast', 'status',
               existing_type=sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='podcast_status'),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    # op.execute("ALTER TABLE podcast ALTER COLUMN status TYPE podcast_status USING status::status")
    # ### end Alembic commands ###
